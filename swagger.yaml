swagger: "2.0"
info:
  version: 1.0.0
  title: Shipnow API
  description: |
    This is the documentation for the ShipNow public API. Please see the <a
    href="https://github.com/shipnow/docs/blob/master/README.md">README</a>
    first for a brief introduction to how our API works.
  contact:
    name: ShipNow API Team
    email: developers@shipnow.com.ar
    url: https://www.shipnow.com.ar
host: api-staging.shipnow.com.ar
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
security:
  - token: []
paths:
  /orders:
    get:
      description: |
        Returns all orders from the system to which the user has access. This
        will generally be all the orders for the account related to the current
        user.
      operationId: findOrders
      parameters:
        - name: status
          in: query
          description: filter by status
          required: false
          type: string
        - name: date_from
          in: query
          description: exclude orders created before this date
          required: false
          type: string
          format: date
        - name: date_to
          in: query
          description: exclude orders created after this date
          required: false
          type: string
          format: date
        - name: status_detail
          in: query
          description: filter by status_detail
          required: false
          type: string
          format: string
        - name: external_reference
          in: query
          description: find order with this external_reference
          required: false
          type: string
          format: string
        - name: carrier_code
          in: query
          description: filter by carrier_code
          required: false
          type: string
          format: string
        - name: store_id
          in: query
          description: filter by store
          required: false
          type: integer
          format: int32
        - name: sku
          in: query
          description: filter orders with the product with this sku
          required: false
          type: string
          format: string
        - name: tracking_number
          in: query
          description: find order with this tracking_number
          required: false
          type: string
          format: string
      responses:
        200:
          description: a list of orders
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
    post:
      description: |
        Creates a new order, and returns it, with it's new id.
      operationId: createOrder
      parameters:
        - $ref: '#/parameters/NewOrder'
      responses:
        200:
          description: the created order
          schema:
            $ref: '#/definitions/Order'
        422:
          description: a list of errors
  /orders/{id}:
    get:
      description: |
        Returns a order identified by id.
      operationId: findOrder
      parameters:
        - name: id
          in: path
          description: id of order to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: order response
          schema:
            $ref: '#/definitions/Order'
        404:
          description: order not found
    delete:
      description: |
        deletes a single order based on the id supplied
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          description: id of order to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: order deleted
  /users/authentication:
    post:
      description: |
        Authenticates a user and returns an API-compatible token.
        Implementations should provide the username and password using HTTP
        Basic Auth (as defined in RFC2617).
      operationId: authenticateUser
      security:
        - auth: []
      responses:
        200:
          description: the user object
          schema:
            type: object
            allOf:
              - $ref: '#/parameters/User/schema'



# TODO: ordesr/shipments
# TODO: products
# TODO: users
# TODO: stores
# TODO: shipping_filters
# TODO: tracking
# TODO: ping

securityDefinitions:
  token:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    description: Used for all non-public endpoints.
  auth:
    type: "basic"
    description: Used to obtain a per-user token.
parameters:
  NewOrder:
    in: body
    name: order
    schema:
      type: object
      required:
        - external_reference
        - ship_to
        - items
      properties:
        external_reference:
          type: string
        ship_to:
          type: object
          required:
            - name
            - last_name
            - zip_code
            - address_line
            - city
            - email
          properties:
            name:
              type: string
            last_name:
              type: string
            phone:
              type: string
            zip_code:
              type: integer
            address_line:
              type: string
            street_name:
              type: string
            street_number:
              type: string
            unit:
              type: string
            floot:
              type: string
            city:
              type: string
            state:
              type: string
            email:
              type: string
        comment:
          type: string
        service_code:
          type: string
        carrier_code:
          type: string
        store_id:
          type: string
          description: the id of this order's store
        items:
          type: object
          required:
            - product_id
            - quantity
          properties:
            product_id:
              type: integer
            quantity:
              type: integer
        status:
          type: string
          enum:
           - awaiting_payment
           - on_hold
           - awaiting_shipment
           - ready_to_pick
  Order:
    name: order
    in: body
    schema:
      allOf:
        - $ref: '#/parameters/NewOrder/schema'
      properties:
        status:
          type: string
          example: "awating_payment"
          enum:
           - awaiting_payment
           - on_hold
           - cancelled
           - awaiting_shipment
           - filtered
           - shipped
           - not_delivered
           - delivered
           - return
           - ready_to_pick
           - picking_list
           - ready_to_pack
           - ready_to_ship
        id:
          readOnly: true
          type: integer
  User:
    name: user
    in: body
    schema:
      properties:
        id:
          description: The unique id.
        email:
          type: string
          example: "alice@example.com"
        token:
          type: string
          example: biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH
          description: The API token.
        description:
          type: string
          description: A free-form description for this user.
        role:
          type: string
          enum:
            - regular
            - admin
            - shipnow
        # TODO: account:
        avatar_url:
          type: string
          format: url
          description: The URL to an avatar used to idenfity this user.
definitions:
  Order:
    allOf:
      - $ref: '#/parameters/Order/schema'
  NewOrder:
    allOf:
      - $ref: '#/parameters/NewOrder/schema'
