{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Shipnow API",
        "description": "ShipNow exposes it's information using RESTful interface. Detailed\ndocumentation of every endpoint is available below.\n\nMaking requests\n---------------\n\n * Our production API is hosted at https://api.shipnow.com.ar.\n * Our testing API is hosted at https://api-staging.shipnow.com.ar.\n\nIf you need to test your clients, feel free to pollute the testing API with\ntest data, though keep in mind that it will be cleared every few hours.\n\nOn occasions, testing may diverge slightly from production. This should not\nlast long, since we generally deploy to one and quickly to the other. If you\nfind such discrepancies, don't worry, since they should quickly propagate to\nproduction.\n\nBoth APIs use HTTPS (ie: HTTP + TLS) exclusively. You MUST NOT attempt to reach\nthem using raw HTTP.\n\nAuthentication\n--------------\n\nAuthentication is not yet done via OAuth, but a simpler password-based\nmechanism.\n\nUsers will provide their username and password, which you will then exchange\nfor a `Token` by `POST`ing to `/user/authentication`, using HTTP Basic\nAuthentication (as defined in [rfc2617][rfc2617]). This will return the entire\nuser object, which contains the user's token:\n\n    {\n        \"id\": 1,\n        \"email\": \"hugo@barrera.io\",\n        \"token\": \"VXyuYdTflB9NY1KUMfcddDcAJeye4vfAv7cZg8m7qDNmhuZ3V6\",\n        \"type\": \"human\",\n        \"description\": \"Hugo\",\n        \"role\": \"admin\",\n        \"account\": {},\n        \"avatar_url\": null\n    }\n\nThis token should be included in every request header to operate on behalf of\nthe user, inside the `Authorization` header, as follows:\n\n    Token token=gNGQNzZ2muAdRKZT3miNccnwYxSrZ6zl2t1B6l6tcHpUw00pok\n\nYou SHOULD NOT store user's username or password. You should only store the\nprovided token.\n\nAccounts vs Users\n-----------------\n\nEach client has a single account, which in turn, has multiple users. An account\nwill hold all orders and products for that client, which all users of that\naccount can access (with different access levels).\n\nEach account can have as many users as they need.  Additional users can be\ncreated via the API or the sellers interface.\n\nAccess Levels\n-------------\n\nUsers can have three access levels:\n\n * ShipNow: These are internal account, that can access data for all clients,\n   and are used internally when actually moving products around.\n   You will generally never see these user types unless you're deploying\n   the ShipNow app for your own warehouse.\n * Administrator: These are the top-level users for each account, and can\n   create other users, as well as a few more special actions.\n * Regular: These are the lower-level users, which can create/edit orders,\n   product, and use other day-to-day interfaces.\n   Bot accounts should generally also be regular users.\n\nStores\n------\n\nEach account can have multiple stores. Stores represent different points of\nsales (eg: MercadoLibre, TiendaNube, eBay, retail, etc).\n\nIf you link shipnow to one of our integrated stores via the web ui, a new\nstore will be created for each one. The `store_type` field should help\nreveal which integration that is.\n\nA single account may also have more than one store for the same store type\n(eg: a single account can be linked to two MercadoLibre profiles).\n\nIf your intention is to read order data from ShipNow, you generally won't\npay much attention to stores. If your intention is to create orders, you'll\nprobably want to use the store type \"custom\".\n\nYou can create as many stores as you need, and it's generally recommended\nthat you use one per application you're integrating, or per point of sales.\n\nData\n----\n\nAll data is sent and received using [JSON][json]. Request data will be\ncontained inside a `results` object:\n\n    {\n        \"results\": [\n           {\n              \"id\": 1,\n              \"name\": \"sample object 1\",\n              \"created_at\": \"2017-12-14T15:42:12.898Z\"\n           }\n        ]\n    }\n\nAll models also contain `updated_at` and `created_at` fields. They are the\nlast-update and creation times respectively  and cannot be manually edited.\n\nIn case of a 4XX or 5XX status code, errors MAY be included in an errors array:\n\n    {\n        \"errors\": [\n            \"Access Denied\"\n        ]\n    }\n\nWe adhere quite closely to [HTTP 1.1][http1.1], with one exception: When data\nvalidation fails, we will return a 422 status code.\n\nPagination\n----------\n\nBy default, all endpoints will return at most the first twenty elements\ninside the `results` array. To obtain other elements include the `page`\nquery parameter, eg:\n\n    https://api.shipnow.com.ar/orders?page=2\n\nThe link to the next and last pages can be found in the `Link` HTTP headers:\n\n   <https://api-staging.shipnow.com.ar/orders?page=20>; rel=\"last\", <https://api-staging.shipnow.com.ar/orders?page=2>; rel=\"next\"\n\nPage indexes are 1-based, meaning that the first pages is one, and NOT zero.\n\nWebhooks\n--------\n\nYou can receive notifications in your app when certain event occur. For now,\nthe only available notification is order creation/update.\n\nNotifications are delivered via webhooks, which you can configure by\nsetting the `webhook_url` to your account (see the `/account` documentation\nbelow).\n\nWebhook notifications will be delivered by `POST`ing data about the event\nwith the following format:\n\n    {\n      \"account\": 1,\n      \"topic\": \"order/created\",\n      \"resource_id\": 1\n    }\n\n * `account` is the account for which this notification applies.  This will\n    only be relevant to you if your application handles multiple ShipNow\n    accounts.\n * `topic` describes the event, and is composed of `model:event`. `event`\n   can be either `created` or `updated`, and model can only be `order`\n   (This WILL change in future, so don't blindly assume it's always\n   `order`!\n * `resources_id` is the `id` of the model which fired this notification\n   (eg: the id of the order that has been created).\n\nContributing\n------------\n\nThis documentation is hosted publicly at [GitHub][github].  If you find any\nerror or room for improvement, feel free to send a contribution.\n\nIf you encounter any undocumented behaviours, or bugs in the API, please open an\nissue in this project's issue tracker. We'll update the documentation (or fix\nthe underlying issue).\n\nCopyright (c) 2016 ShipNow SRL <developers@shipnow.com.ar>\n\n[json]: http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf\n[http1.1]: https://tools.ietf.org/html/rfc2616\n[github]: https://github.com/shipnow/docs\n[rfc2617]: https://tools.ietf.org/html/rfc2617#section-2\n",
        "contact": {
            "name": "ShipNow API Team",
            "email": "developers@shipnow.com.ar",
            "url": "https://www.shipnow.com.ar"
        }
    },
    "host": "api-staging.shipnow.com.ar",
    "basePath": "/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "security": [
        {
            "token": []
        }
    ],
    "paths": {
        "/orders": {
            "get": {
                "description": "Returns all orders from the system to which the user has access. This\nwill generally be all the orders for the account related to the current\nuser.\n",
                "operationId": "findOrders",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "filter by status",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "description": "exclude orders created before this date",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "description": "exclude orders created after this date",
                        "required": false,
                        "type": "string",
                        "format": "date"
                    },
                    {
                        "name": "status_detail",
                        "in": "query",
                        "description": "filter by status_detail",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "external_reference",
                        "in": "query",
                        "description": "find order with this external_reference",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "carrier_code",
                        "in": "query",
                        "description": "filter by carrier_code",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "filter by store",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sku",
                        "in": "query",
                        "description": "filter orders with the product with this sku",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "tracking_number",
                        "in": "query",
                        "description": "find order with this tracking_number",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Orders.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "id": 18424,
                                        "external_reference": 100553245,
                                        "comment": "Stock comes in on 2016-02-28",
                                        "ship_to": {
                                            "name": "John",
                                            "last_name": "Doe",
                                            "phone": "+54 11 5555 6666",
                                            "zip_code": 2085,
                                            "address_line": "Fake Street 123 4A",
                                            "street_name": "Fake Street",
                                            "street_number": 123,
                                            "unit": "A",
                                            "floor": 4,
                                            "city": "CABA",
                                            "state": "Argentina",
                                            "email": "johndoe@example.com"
                                        },
                                        "shipping_option": {
                                            "service_code": "oca_pap_estandar",
                                            "carrier_code": "oca"
                                        },
                                        "store_id": 2,
                                        "store_type": "meli",
                                        "status": "delivered",
                                        "items": [
                                            {
                                                "id": 2827,
                                                "external_reference": "70089453/A",
                                                "quantity": 2,
                                                "unit_price": 170,
                                                "title": "Blue Shoes",
                                                "image_url": "https://cdn.shipnow.com.ar/items/2827.png"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new order, and returns it with its new id.\n",
                "operationId": "createOrder",
                "parameters": [
                    {
                        "$ref": "#/parameters/NewOrder"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created Order.",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "id": 18424,
                                "external_reference": 100553245,
                                "comment": "Stock comes in on 2016-02-28",
                                "ship_to": {
                                    "name": "John",
                                    "last_name": "Doe",
                                    "phone": "+54 11 5555 6666",
                                    "zip_code": 2085,
                                    "address_line": "Fake Street 123 4A",
                                    "street_name": "Fake Street",
                                    "street_number": 123,
                                    "unit": "A",
                                    "floor": 4,
                                    "city": "CABA",
                                    "state": "Argentina",
                                    "email": "johndoe@example.com"
                                },
                                "shipping_option": {
                                    "service_code": "oca_pap_estandar",
                                    "carrier_code": "oca"
                                },
                                "store_id": 2,
                                "store_type": "meli",
                                "status": "delivered",
                                "items": [
                                    {
                                        "id": 2827,
                                        "external_reference": "70089453/A",
                                        "quantity": 2,
                                        "unit_price": 170,
                                        "title": "Blue Shoes",
                                        "image_url": "https://cdn.shipnow.com.ar/items/2827.png"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "A list of validation errors.",
                        "examples": {
                            "application/json": {
                                "errors": {
                                    "external_reference": "Has already been taken",
                                    "store_id": "Cannot be null"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "description": "Returns an order identified by id.\n",
                "operationId": "getOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of order to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An Order.",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "id": 18424,
                                "external_reference": 100553245,
                                "comment": "Stock comes in on 2016-02-28",
                                "ship_to": {
                                    "name": "John",
                                    "last_name": "Doe",
                                    "phone": "+54 11 5555 6666",
                                    "zip_code": 2085,
                                    "address_line": "Fake Street 123 4A",
                                    "street_name": "Fake Street",
                                    "street_number": 123,
                                    "unit": "A",
                                    "floor": 4,
                                    "city": "CABA",
                                    "state": "Argentina",
                                    "email": "johndoe@example.com"
                                },
                                "shipping_option": {
                                    "service_code": "oca_pap_estandar",
                                    "carrier_code": "oca"
                                },
                                "store_id": 2,
                                "store_type": "meli",
                                "status": "delivered",
                                "items": [
                                    {
                                        "id": 2827,
                                        "external_reference": "70089453/A",
                                        "quantity": 2,
                                        "unit_price": 170,
                                        "title": "Blue Shoes",
                                        "image_url": "https://cdn.shipnow.com.ar/items/2827.png"
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Order with given id not found."
                    }
                }
            },
            "put": {
                "description": "Update an existing order. Note that not all fields are editable at all\ntimes. Once orders have been packed, items and shipping data cannot be\naltered. Only certain status transitions are valid.\n",
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the order to be updated.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated order.",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "id": 18424,
                                "external_reference": 100553245,
                                "comment": "Stock comes in on 2016-02-28",
                                "ship_to": {
                                    "name": "John",
                                    "last_name": "Doe",
                                    "phone": "+54 11 5555 6666",
                                    "zip_code": 2085,
                                    "address_line": "Fake Street 123 4A",
                                    "street_name": "Fake Street",
                                    "street_number": 123,
                                    "unit": "A",
                                    "floor": 4,
                                    "city": "CABA",
                                    "state": "Argentina",
                                    "email": "johndoe@example.com"
                                },
                                "shipping_option": {
                                    "service_code": "oca_pap_estandar",
                                    "carrier_code": "oca"
                                },
                                "store_id": 2,
                                "store_type": "meli",
                                "status": "delivered",
                                "items": [
                                    {
                                        "id": 2827,
                                        "external_reference": "70089453/A",
                                        "quantity": 2,
                                        "unit_price": 170,
                                        "title": "Blue Shoes",
                                        "image_url": "https://cdn.shipnow.com.ar/items/2827.png"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a single order based on the id supplied.\n",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of order to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Order deleted."
                    }
                }
            }
        },
        "/order/{orderId}/shipments": {
            "get": {
                "description": "Returns the shipment for this order. Older orders MAY have more than\none shipment if they were returned.\n",
                "operationId": "findShipments",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The id of the order for which this shipment applies.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of shipments",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Shipment"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "id": 6662,
                                        "order_id": 37201,
                                        "speed_shipping": null,
                                        "speed_handling": null,
                                        "estimated_handling": null,
                                        "estimated_delivery": null,
                                        "shipping_price": 30,
                                        "insurance_price": 5,
                                        "tracking_number": "38007500000015676447",
                                        "external_reference": "2107694F",
                                        "shipped_at": "2015-12-21T03:00:00.000Z",
                                        "delivered_at": "2015-12-15T03:00:00.000Z",
                                        "prepared_at": null,
                                        "last_mile_at": null,
                                        "not_delivered_at": null,
                                        "carrier_code": "integral",
                                        "service_code": "integral_48",
                                        "type": "PAP"
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Order with given orderId not found."
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Returns all the products to which the user has access.\n",
                "operationId": "findProducts",
                "parameters": [
                    {
                        "name": "external_reference",
                        "in": "query",
                        "description": "Filter by this external_reference.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of zero or more products.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Product"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "id": 12072,
                                        "external_reference": "AC17283DFC",
                                        "title": "Red Scarf",
                                        "stock": 10,
                                        "price": 13.5,
                                        "currency": "ARS",
                                        "image_url": "https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png",
                                        "dimensions": {
                                            "weight": 300,
                                            "heigth": 20,
                                            "length": 20,
                                            "width": 20
                                        },
                                        "extra_data": {
                                            "publication_id": "FD742"
                                        },
                                        "location": null
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new product, and returns it with its new id.\n",
                "operationId": "createProduct",
                "parameters": [
                    {
                        "$ref": "#/parameters/Product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created product",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        },
                        "examples": {
                            "application/json": {
                                "id": 12072,
                                "external_reference": "AC17283DFC",
                                "title": "Red Scarf",
                                "stock": 10,
                                "price": 13.5,
                                "currency": "ARS",
                                "image_url": "https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png",
                                "dimensions": {
                                    "weight": 300,
                                    "heigth": 20,
                                    "length": 20,
                                    "width": 20
                                },
                                "extra_data": {
                                    "publication_id": "FD742"
                                },
                                "location": null
                            }
                        }
                    },
                    "422": {
                        "description": "A list of validation errors.",
                        "examples": {
                            "application/json": {
                                "errors": {
                                    "external_reference": "Has already been taken"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}/": {
            "get": {
                "description": "Returns a product identified by id.\n",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the product to fetch.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A product.",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        },
                        "examples": {
                            "application/json": {
                                "id": 12072,
                                "external_reference": "AC17283DFC",
                                "title": "Red Scarf",
                                "stock": 10,
                                "price": 13.5,
                                "currency": "ARS",
                                "image_url": "https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png",
                                "dimensions": {
                                    "weight": 300,
                                    "heigth": 20,
                                    "length": 20,
                                    "width": 20
                                },
                                "extra_data": {
                                    "publication_id": "FD742"
                                },
                                "location": null
                            }
                        }
                    },
                    "404": {
                        "description": "Product with given id not found."
                    }
                }
            },
            "put": {
                "description": "Update an existing product.\n",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the product to be updated.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated product.",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        },
                        "examples": {
                            "application/json": {
                                "id": 12072,
                                "external_reference": "AC17283DFC",
                                "title": "Red Scarf",
                                "stock": 10,
                                "price": 13.5,
                                "currency": "ARS",
                                "image_url": "https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png",
                                "dimensions": {
                                    "weight": 300,
                                    "heigth": 20,
                                    "length": 20,
                                    "width": 20
                                },
                                "extra_data": {
                                    "publication_id": "FD742"
                                },
                                "location": null
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single product based on the id supplied.\n",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of product to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted."
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Returns all users for the current user's account.\n",
                "operationId": "findUsers",
                "responses": {
                    "200": {
                        "description": "An array of User objects",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "id": 201,
                                        "email": "alice@example.com",
                                        "token": "cGwp429nYTmwdDvVtB3zFd9O7opgsz9Oq1e19dCJjfOIhOTE25",
                                        "type": null,
                                        "description": null,
                                        "role": "regular",
                                        "avatar_url": "https://cdn.shipnow.com.ar/avatars/201.png"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user for this account.\n\nNote that the calling user requires `admin` priviledges for this call\nto work (ie: `user.type` must be equal to `admin`)\n",
                "operationId": "createUser",
                "responses": {
                    "200": {
                        "description": "The newly created User.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "examples": {
                            "application/json": {
                                "id": 202,
                                "email": "bob@example.com",
                                "token": "l352aggWKHXAKDxnvqFbMDdS0od1BfxUKXhfIU0vDO9XiipBQO",
                                "type": null,
                                "description": null,
                                "role": "regular",
                                "avatar_url": "https://cdn.shipnow.com.ar/avatars/207.png"
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to user creation."
                    },
                    "422": {
                        "description": "A list of validation errors.",
                        "examples": {
                            "application/json": {
                                "errors": {
                                    "email": "Has already been taken"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}/": {
            "get": {
                "description": "Returns a user identified by id.\n",
                "operationId": "getUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the user to fetch.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A user.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "examples": {
                            "application/json": {
                                "id": 202,
                                "email": "bob@example.com",
                                "token": "l352aggWKHXAKDxnvqFbMDdS0od1BfxUKXhfIU0vDO9XiipBQO",
                                "type": null,
                                "description": null,
                                "role": "regular",
                                "avatar_url": "https://cdn.shipnow.com.ar/avatars/207.png"
                            }
                        }
                    },
                    "404": {
                        "description": "User with given id not found."
                    }
                }
            },
            "put": {
                "description": "Update an existing User.\n\nUsers of type `admin` can update all users for an account. `regular`\nusers can only edit themselves.\n",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the User to be updated.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/User"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated User.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "examples": {
                            "application/json": {
                                "id": 202,
                                "email": "bob@example.com",
                                "token": "l352aggWKHXAKDxnvqFbMDdS0od1BfxUKXhfIU0vDO9XiipBQO",
                                "type": null,
                                "description": null,
                                "role": "regular",
                                "avatar_url": "https://cdn.shipnow.com.ar/avatars/207.png"
                            }
                        }
                    },
                    "403": {
                        "description": "Current User cannot modify target User."
                    }
                }
            },
            "delete": {
                "description": "Delete a single User based on the id supplied.\n\nOnly users of type `admin` can call this endpoint.\n",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of User to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted."
                    },
                    "403": {
                        "description": "Current User cannot delete target User."
                    }
                }
            }
        },
        "/users/authentication": {
            "post": {
                "description": "Authenticates a user and returns an API-compatible token.\nImplementations should provide the username and password using HTTP\nBasic Auth (as defined in RFC2617).\n",
                "operationId": "authenticateUser",
                "security": [
                    {
                        "auth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the user object",
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "examples": {
                            "application/json": {
                                "id": 202,
                                "email": "bob@example.com",
                                "token": "l352aggWKHXAKDxnvqFbMDdS0od1BfxUKXhfIU0vDO9XiipBQO",
                                "type": null,
                                "description": null,
                                "role": "regular",
                                "avatar_url": "https://cdn.shipnow.com.ar/avatars/207.png"
                            }
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "description": "Returns all accounts to which the user has access - this will almost\nalways be just the user's account.\n",
                "operationId": "findAccount",
                "responses": {
                    "200": {
                        "description": "An array of Account objects",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": [
                                        {
                                            "$ref": "#/definitions/Account"
                                        }
                                    ]
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "id": 7,
                                        "email": "info@example.com",
                                        "name": "John",
                                        "last_name": "Doe",
                                        "company_name": "Example Company Inc",
                                        "phone": "+54 11 1234 5678",
                                        "address": {
                                            "postal_code": 2000,
                                            "address_line": "Not Fake Av 321",
                                            "street_name": "Not Fake Av",
                                            "street_number": 321,
                                            "unit": "C",
                                            "floor": "1",
                                            "city": "CABA",
                                            "state": "Argentina"
                                        },
                                        "stores": [
                                            {
                                                "id": 19,
                                                "store_type": "meli",
                                                "name": "Example Co ML",
                                                "user_store_id": 784
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{id}": {
            "put": {
                "description": "Update an account.\nOnly `admin`-type users can update accounts, and they can only update\ntheir own.\n",
                "operationId": "updateAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Account to be updated.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/Account"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated Account.",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        },
                        "examples": {
                            "application/json": {
                                "id": 7,
                                "email": "info@example.com",
                                "name": "John",
                                "last_name": "Doe",
                                "company_name": "Example Company Inc",
                                "phone": "+54 11 1234 5678",
                                "address": {
                                    "postal_code": 2000,
                                    "address_line": "Not Fake Av 321",
                                    "street_name": "Not Fake Av",
                                    "street_number": 321,
                                    "unit": "C",
                                    "floor": "1",
                                    "city": "CABA",
                                    "state": "Argentina"
                                },
                                "stores": [
                                    {
                                        "id": 19,
                                        "store_type": "meli",
                                        "name": "Example Co ML",
                                        "user_store_id": "784"
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Current User cannot modify target Account."
                    }
                }
            }
        },
        "/stores": {
            "get": {
                "description": "Returns all stores for the current user's account.\n",
                "operationId": "findStores",
                "responses": {
                    "200": {
                        "description": "An array of Stores",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Store"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "id": 16,
                                        "name": "Example Co ML",
                                        "store_type": "meli",
                                        "user_store_id": "784",
                                        "credentials": {
                                            "access_token": "APP_USR-XbAyBlrgMG1FsSTHHQ8UQtV1Varnswhh",
                                            "refresh_token": "TG-lY9LMGCTnyHDcDi22Zt6Lx"
                                        },
                                        "image_url": "https://cnd.shipnow.com.ar/stores/meli_generic.png"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new Store\n",
                "operationId": "createStore",
                "parameters": [
                    {
                        "$ref": "#/parameters/NewStore"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The newly created Store.",
                        "schema": {
                            "$ref": "#/definitions/Store"
                        },
                        "examples": {
                            "application/json": {
                                "id": 16,
                                "name": "Example Co ML",
                                "store_type": "meli",
                                "user_store_id": "784",
                                "credentials": {
                                    "access_token": "APP_USR-XbAyBlrgMG1FsSTHHQ8UQtV1Varnswhh",
                                    "refresh_token": "TG-lY9LMGCTnyHDcDi22Zt6Lx"
                                },
                                "image_url": "https://cnd.shipnow.com.ar/stores/meli_generic.png"
                            }
                        }
                    },
                    "422": {
                        "description": "A list of validation errors.",
                        "examples": {
                            "application/json": {
                                "errors": {
                                    "store_type": "Cannot be null"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stores/{id}": {
            "get": {
                "description": "Returns the Store identified by id.\n",
                "operationId": "getStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of order to fetch.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Store.",
                        "schema": {
                            "$ref": "#/definitions/Store"
                        },
                        "examples": {
                            "application/json": {
                                "id": 16,
                                "name": "Example Co ML",
                                "store_type": "meli",
                                "user_store_id": "784",
                                "credentials": {
                                    "access_token": "APP_USR-XbAyBlrgMG1FsSTHHQ8UQtV1Varnswhh",
                                    "refresh_token": "TG-lY9LMGCTnyHDcDi22Zt6Lx"
                                },
                                "image_url": "https://cnd.shipnow.com.ar/stores/meli_generic.png"
                            }
                        }
                    },
                    "404": {
                        "description": "A Store with the given id not found."
                    }
                }
            },
            "put": {
                "description": "Update an existing Store.\n",
                "operationId": "updateStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the Store to be updated.",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "$ref": "#/parameters/Store"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated order.",
                        "schema": {
                            "$ref": "#/definitions/Store"
                        },
                        "examples": {
                            "application/json": {
                                "id": 16,
                                "name": "Example Co ML",
                                "store_type": "meli",
                                "user_store_id": "784",
                                "credentials": {
                                    "access_token": "APP_USR-XbAyBlrgMG1FsSTHHQ8UQtV1Varnswhh",
                                    "refresh_token": "TG-lY9LMGCTnyHDcDi22Zt6Lx"
                                },
                                "image_url": "https://cnd.shipnow.com.ar/stores/meli_generic.png"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a single Store based on the id supplied.\n",
                "operationId": "deleteStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of Store to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Store deleted."
                    }
                }
            }
        },
        "/shipping_services": {
            "get": {
                "description": "Returns all shipping services.\n",
                "operationId": "findShippingServices",
                "responses": {
                    "200": {
                        "description": "An array of ShippingServices",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ShippingService"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "results": [
                                    {
                                        "id": 13,
                                        "code": "motonorte_same_day",
                                        "description": null,
                                        "min_zip_code": null,
                                        "max_zip_code": null,
                                        "post_offices": [],
                                        "carrier": {
                                            "id": 3,
                                            "code": "motonorte",
                                            "name": "Motonorte",
                                            "description": "Envíos a CABA y GBA"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/shipping_services/{id}": {
            "get": {
                "description": "Returns the ShippingService identified by id.\n",
                "operationId": "getShippingService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of ShippingService to fetch.",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A ShippingService.",
                        "schema": {
                            "$ref": "#/definitions/ShippingService"
                        },
                        "examples": {
                            "application/json": {
                                "id": 13,
                                "code": "motonorte_same_day",
                                "description": null,
                                "min_zip_code": null,
                                "max_zip_code": null,
                                "post_offices": [],
                                "carrier": {
                                    "id": 3,
                                    "code": "motonorte",
                                    "name": "Motonorte",
                                    "description": "Envíos a CABA y GBA"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "A ShippingService with the given id not found."
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Use this endpoint to test connectivity to the ShipNow API, response times, or debug other possible network-related issues.",
                "operationId": "ping",
                "security": [],
                "responses": {
                    "200": {
                        "description": "This endpoint will always return the string \"pong\"."
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Used for all non-public endpoints."
        },
        "auth": {
            "type": "basic",
            "description": "Used to obtain a per-user token."
        }
    },
    "parameters": {
        "NewOrder": {
            "in": "body",
            "name": "order",
            "schema": {
                "type": "object",
                "required": [
                    "external_reference",
                    "ship_to",
                    "items"
                ],
                "properties": {
                    "external_reference": {
                        "type": "string",
                        "description": "A free-form text to later find this order."
                    },
                    "comment": {
                        "type": "string"
                    },
                    "ship_to": {
                        "type": "object",
                        "required": [
                            "name",
                            "last_name",
                            "zip_code",
                            "address_line",
                            "city",
                            "email"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "last_name": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            },
                            "zip_code": {
                                "type": "integer"
                            },
                            "address_line": {
                                "type": "string"
                            },
                            "street_name": {
                                "type": "string"
                            },
                            "street_number": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "floot": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            }
                        }
                    },
                    "shipping_options": {
                        "type": "object",
                        "required": [
                            "service_code",
                            "carrier_code"
                        ],
                        "properties": {
                            "service_code": {
                                "type": "string"
                            },
                            "carrier_code": {
                                "type": "string"
                            }
                        }
                    },
                    "store_id": {
                        "type": "string",
                        "description": "The id of this order's store."
                    },
                    "store_type": {
                        "type": "string",
                        "description": "The store_type for this order's store.",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "example": "awating_payment",
                        "enum": [
                            "awaiting_payment",
                            "on_hold",
                            "cancelled",
                            "awaiting_shipment",
                            "filtered",
                            "shipped",
                            "not_delivered",
                            "delivered",
                            "return",
                            "ready_to_pick",
                            "picking_list",
                            "ready_to_pack",
                            "ready_to_ship"
                        ]
                    },
                    "items": {
                        "type": "array",
                        "description": "The items (products) included in this order.",
                        "items": [
                            {
                                "type": "object",
                                "required": [
                                    "id",
                                    "quantity"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "The id of a product. See /products.",
                                        "type": "integer"
                                    },
                                    "external_reference": {
                                        "type": "string",
                                        "description": "The product's external_reference.",
                                        "readOnly": true
                                    },
                                    "quantity": {
                                        "description": "The amount of this product that this order contains.",
                                        "type": "integer"
                                    },
                                    "unit_price": {
                                        "description": "This product's price (per unit).",
                                        "readOnly": true,
                                        "type": "number"
                                    },
                                    "title": {
                                        "description": "The product's title",
                                        "type": "string"
                                    },
                                    "image_url": {
                                        "description": "Ths product's image_url.",
                                        "type": "string"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        "Product": {
            "in": "body",
            "name": "product",
            "schema": {
                "type": "object",
                "required": [
                    "external_reference",
                    "title"
                ],
                "properties": {
                    "external_reference": {
                        "type": "string",
                        "description": "A free-form text to later find and search this product."
                    },
                    "title": {
                        "type": "string",
                        "description": "A name for this product. This is free-form text, and is only used for display purposes."
                    },
                    "stock": {
                        "type": "number",
                        "description": "Remaining stock for this product"
                    },
                    "price": {
                        "type": "number",
                        "description": "This product's price. Insurance coverage will be based on this price."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency for this product's price. Should be ARS, for now."
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url",
                        "description": "A URL to an image that visually identifies this product."
                    },
                    "dimensions": {
                        "type": "object",
                        "properties": {
                            "weight": {
                                "type": "number"
                            },
                            "height": {
                                "type": "number"
                            },
                            "length": {
                                "type": "number"
                            },
                            "width": {
                                "type": "number"
                            }
                        }
                    },
                    "extra_data": {
                        "type": "object",
                        "description": "A free-form JSON field where custom data can be stored for each product."
                    }
                }
            }
        },
        "User": {
            "name": "user",
            "in": "body",
            "schema": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The unique id."
                    },
                    "email": {
                        "type": "string",
                        "example": "alice@example.com"
                    },
                    "token": {
                        "type": "string",
                        "example": "biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH",
                        "description": "The API token."
                    },
                    "description": {
                        "type": "string",
                        "description": "A free-form description for this user."
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "regular",
                            "admin",
                            "shipnow"
                        ]
                    },
                    "avatar_url": {
                        "type": "string",
                        "format": "url",
                        "description": "The URL to an avatar used to idenfity this user."
                    }
                }
            }
        },
        "Account": {
            "name": "account",
            "in": "body",
            "schema": {
                "properties": {
                    "id": {
                        "readOnly": true,
                        "description": "The unique id."
                    },
                    "email": {
                        "type": "string",
                        "example": "alice@example.com"
                    },
                    "name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "object",
                        "properties": {
                            "postal_code": {
                                "type": "string"
                            },
                            "address_line": {
                                "type": "string"
                            },
                            "street_name": {
                                "type": "string"
                            },
                            "street_number": {
                                "type": "string"
                            },
                            "unit": {
                                "type": "string"
                            },
                            "floor": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            }
                        }
                    },
                    "token": {
                        "type": "string",
                        "example": "biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH"
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url",
                        "description": "The URL to an image used to idenfity this account."
                    },
                    "webhook_url": {
                        "type": "string",
                        "format": "url",
                        "description": "The URL where webhooks notifications are sent to. See the\ndocumentation on webhooks for more details.\n"
                    }
                }
            }
        },
        "NewStore": {
            "name": "store",
            "in": "body",
            "schema": {
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A name to identify this store."
                    },
                    "store_type": {
                        "type": "string",
                        "enum": [
                            "meli",
                            "magento",
                            "prestashop",
                            "woocommerce",
                            "shopify",
                            "custom",
                            "manual",
                            "tiendanube"
                        ]
                    },
                    "credentials": {
                        "type": "object",
                        "description": "A free-form JSON field where credentials to upstream stores are save.\n"
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url",
                        "description": "The URL to an image to identify this store",
                        "default": "The image_url for the Store's store_type"
                    }
                }
            }
        },
        "Store": {
            "in": "body",
            "name": "store",
            "schema": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "description": "A unique id.",
                        "example": 12
                    }
                }
            }
        }
    },
    "definitions": {
        "Shipment": {
            "required": [
                "id",
                "order_id",
                "speed_shipping",
                "speed_handling",
                "estimated_handling",
                "estimated_delivery",
                "shipping_price",
                "insurance_price",
                "tracking_number",
                "external_reference",
                "shipped_at",
                "delivered_at",
                "prepared_at",
                "last_mile_at",
                "not_delivered_at",
                "carrier_code",
                "service_code",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "speed_shipping": {
                    "type": "string"
                },
                "speed_handling": {
                    "type": "string"
                },
                "estimated_handling": {
                    "type": "string",
                    "format": "date-time"
                },
                "estimated_delivery": {
                    "type": "string",
                    "format": "date-time"
                },
                "shipping_price": {
                    "type": "number"
                },
                "insurance_price": {
                    "type": "number"
                },
                "tracking_number": {
                    "type": "string"
                },
                "external_reference": {
                    "type": "string"
                },
                "shipped_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "delivered_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "prepared_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "last_mile_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "not_delivered_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "carrier_code": {
                    "type": "string"
                },
                "service_code": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "PAS",
                        "PAP"
                    ]
                }
            }
        },
        "Order": {
            "required": [
                "id",
                "external_reference",
                "ship_to",
                "store_id",
                "items"
            ],
            "properties": {
                "store_type": {
                    "type": "string",
                    "description": "The store_type for this order's store.",
                    "readOnly": true
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "external_reference": {
                    "type": "string",
                    "description": "A free-form text to later find and search this order."
                },
                "comment": {
                    "type": "string"
                },
                "ship_to": {
                    "type": "object",
                    "required": [
                        "name",
                        "last_name",
                        "zip_code",
                        "address_line",
                        "city",
                        "email"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "last_name": {
                            "type": "string"
                        },
                        "phone": {
                            "type": "string"
                        },
                        "zip_code": {
                            "type": "integer"
                        },
                        "address_line": {
                            "type": "string"
                        },
                        "street_name": {
                            "type": "string"
                        },
                        "street_number": {
                            "type": "string"
                        },
                        "unit": {
                            "type": "string"
                        },
                        "floot": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        }
                    }
                },
                "shipping_options": {
                    "type": "object",
                    "required": [
                        "service_code",
                        "carrier_code"
                    ],
                    "properties": {
                        "service_code": {
                            "type": "string"
                        },
                        "carrier_code": {
                            "type": "string"
                        }
                    }
                },
                "store_id": {
                    "type": "string",
                    "description": "The id of this order's store."
                },
                "status": {
                    "type": "string",
                    "example": "awating_payment",
                    "enum": [
                        "awaiting_payment",
                        "on_hold",
                        "cancelled",
                        "awaiting_shipment",
                        "filtered",
                        "shipped",
                        "not_delivered",
                        "delivered",
                        "return",
                        "ready_to_pick",
                        "picking_list",
                        "ready_to_pack",
                        "ready_to_ship"
                    ]
                },
                "items": {
                    "type": "array",
                    "description": "The items (products) included in this order.",
                    "items": [
                        {
                            "type": "object",
                            "required": [
                                "id",
                                "quantity"
                            ],
                            "properties": {
                                "id": {
                                    "description": "The id of a product. See /products.",
                                    "type": "integer"
                                },
                                "external_reference": {
                                    "type": "string",
                                    "description": "The product's external_reference.",
                                    "readOnly": true
                                },
                                "quantity": {
                                    "description": "The amount of this product that this order contains.",
                                    "type": "integer"
                                },
                                "unit_price": {
                                    "description": "This product's price (per unit).",
                                    "readOnly": true,
                                    "type": "number"
                                },
                                "title": {
                                    "description": "The product's title",
                                    "type": "string"
                                },
                                "image_url": {
                                    "description": "Ths product's image_url.",
                                    "type": "string"
                                }
                            }
                        }
                    ]
                }
            }
        },
        "Product": {
            "required": [
                "id",
                "external_reference",
                "title",
                "stock",
                "price",
                "currency",
                "image_url",
                "dimensions",
                "extra_data"
            ],
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "external_reference": {
                    "type": "string",
                    "description": "A free-form text to later find and search this product."
                },
                "title": {
                    "type": "string",
                    "description": "A name for this product. This is free-form text, and is only used for display purposes."
                },
                "stock": {
                    "type": "number",
                    "description": "Remaining stock for this product"
                },
                "price": {
                    "type": "number",
                    "description": "This product's price. Insurance coverage will be based on this price."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency for this product's price. Should be ARS, for now."
                },
                "image_url": {
                    "type": "string",
                    "format": "url",
                    "description": "A URL to an image that visually identifies this product."
                },
                "dimensions": {
                    "type": "object",
                    "properties": {
                        "weight": {
                            "type": "number"
                        },
                        "height": {
                            "type": "number"
                        },
                        "length": {
                            "type": "number"
                        },
                        "width": {
                            "type": "number"
                        }
                    }
                },
                "extra_data": {
                    "type": "object",
                    "description": "A free-form JSON field where custom data can be stored for each product."
                }
            }
        },
        "User": {
            "required": [
                "email"
            ],
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "The unique id."
                },
                "email": {
                    "type": "string",
                    "example": "alice@example.com"
                },
                "token": {
                    "type": "string",
                    "example": "biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH",
                    "description": "The API token."
                },
                "description": {
                    "type": "string",
                    "description": "A free-form description for this user."
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "regular",
                        "admin",
                        "shipnow"
                    ]
                },
                "avatar_url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL to an avatar used to idenfity this user."
                }
            }
        },
        "Account": {
            "properties": {
                "id": {
                    "readOnly": true,
                    "description": "The unique id."
                },
                "email": {
                    "type": "string",
                    "example": "alice@example.com"
                },
                "name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "address": {
                    "type": "object",
                    "properties": {
                        "postal_code": {
                            "type": "string"
                        },
                        "address_line": {
                            "type": "string"
                        },
                        "street_name": {
                            "type": "string"
                        },
                        "street_number": {
                            "type": "string"
                        },
                        "unit": {
                            "type": "string"
                        },
                        "floor": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string"
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "example": "biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH"
                },
                "image_url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL to an image used to idenfity this account."
                },
                "webhook_url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL where webhooks notifications are sent to. See the\ndocumentation on webhooks for more details.\n"
                }
            }
        },
        "Store": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A name to identify this store."
                },
                "store_type": {
                    "type": "string",
                    "enum": [
                        "meli",
                        "magento",
                        "prestashop",
                        "woocommerce",
                        "shopify",
                        "custom",
                        "manual",
                        "tiendanube"
                    ]
                },
                "credentials": {
                    "type": "object",
                    "description": "A free-form JSON field where credentials to upstream stores are save.\n"
                },
                "image_url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL to an image to identify this store",
                    "default": "The image_url for the Store's store_type"
                }
            }
        },
        "ShippingService": {
            "properties": {
                "id": {
                    "description": "A unique id.",
                    "example": 1,
                    "type": "integer"
                },
                "code": {
                    "description": "A unique code for this shipping service. It should be more\nreadable than the id, and will usually be returned when referencing\nshipping services.\n",
                    "type": "string",
                    "example": "motonorte"
                },
                "min_zip_code": {
                    "description": "Indicates that this shipping service only operates in areas with\nzipcode greater than this value.\n",
                    "type": "integer",
                    "example": 1000
                },
                "max_zip_code": {
                    "description": "Indicates that this shipping service only operates in areas with\nzipcode less than this value.\n",
                    "type": "integer",
                    "example": 9999
                },
                "carrier": {
                    "type": "object",
                    "description": "Information about the carrier that provides this shipping service.",
                    "properties": {
                        "id": {
                            "description": "The carrier's unique id.",
                            "type": "integer",
                            "example": 1
                        },
                        "code": {
                            "description": "A unique code for this carrier. It should be more readable than\nthe id, and will usually be returned when referencing carrier.\n",
                            "type": "string",
                            "example": "ups"
                        },
                        "name": {
                            "description": "A friendly name for this carrier.",
                            "type": "string",
                            "example": "UPS"
                        },
                        "description": {
                            "description": "A free-form text field that give some information about this\nshipping carrier.\n",
                            "type": "string",
                            "example": "Does worldwide door-to-door shipping"
                        }
                    }
                }
            }
        }
    }
}